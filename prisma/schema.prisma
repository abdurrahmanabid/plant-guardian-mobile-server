// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // use default output so @prisma/client works
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String              @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String              @unique
  phone          String?             @unique
  password       String
  address        Address?
  role           Role
  diagonis       Diagonis[]
  images         ImageModel[]
  soils          SoilAndImageModel[]
  SoilPrediction SoilPrediction[]
}

model Diagonis {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  diagonis User   @relation(fields: [userId], references: [id])
  userId   String @db.ObjectId
}

model ImageModel {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl    String // ছবির URL বা path
  diseaseName String // রোগের নাম
  confidence  Float? // রোগ শনাক্তকরণের confidence level (0-1)
  treatment   String? // চিকিৎসা পরামর্শ
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
}

model SoilAndImageModel {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  // Input Data
  temperature     Float // তাপমাত্রা (22)
  phLevel         Float // pH লেভেল (22)
  soilColor       String // মাটির রং (Black)
  rainfall        Float // বৃষ্টিপাত (22)
  nitrogen        Float // নাইট্রোজেন (22)
  phosphorous     Float // ফসফরাস (22) - spelling corrected from "phospmonus"
  potassium       Float // পটাশিয়াম (22)
  cropType        String // ফসলের ধরন (Grape)
  diseaseDetected String // রোগ শনাক্তকরণ (Grape__healthy)
  imageUrl        String // ছবির URL বা path
  confidence      Float? // রোগ শনাক্তকরণের confidence level (0-1)

  // Analysis Results
  recommendedFertilizer String // প্রস্তাবিত সারের ধরন (SSP)
  treatmentSuggestion   String // চিকিৎসা পরামর্শ

  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
}

// Stores raw soil inputs and the model's fertilizer prediction
model SoilPrediction {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  // Input Data
  temperature Float
  phLevel     Float
  soilColor   String
  rainfall    Float
  nitrogen    Float
  phosphorous Float
  potassium   Float
  cropType    String

  // Prediction Results
  predictedFertilizer String
  predictedTreatment  String?
  confidence          Float?

  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
}

// Address is an embedded document
type Address {
  street String
  city   String
  state  String
}

// Access role
enum Role {
  Doctor
  Farmer
}
